/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tsb.ods.sys.api.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Avro schema for TransactionResponseIA7061 */
@org.apache.avro.specific.AvroGenerated
public class TransactionResponseIA7061 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6325915058609844612L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TransactionResponseIA7061\",\"namespace\":\"com.tsb.ods.sys.api.schema\",\"doc\":\"Avro schema for TransactionResponseIA7061\",\"fields\":[{\"name\":\"numtotlei\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"numtotnolei\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"error\",\"type\":{\"type\":\"record\",\"name\":\"Error\",\"fields\":[{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"reason\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TransactionResponseIA7061> ENCODER =
      new BinaryMessageEncoder<TransactionResponseIA7061>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TransactionResponseIA7061> DECODER =
      new BinaryMessageDecoder<TransactionResponseIA7061>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TransactionResponseIA7061> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TransactionResponseIA7061> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TransactionResponseIA7061> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TransactionResponseIA7061>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TransactionResponseIA7061 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TransactionResponseIA7061 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TransactionResponseIA7061 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TransactionResponseIA7061 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Long numtotlei;
  private java.lang.Long numtotnolei;
  private com.tsb.ods.sys.api.schema.Error error;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TransactionResponseIA7061() {}

  /**
   * All-args constructor.
   * @param numtotlei The new value for numtotlei
   * @param numtotnolei The new value for numtotnolei
   * @param error The new value for error
   */
  public TransactionResponseIA7061(java.lang.Long numtotlei, java.lang.Long numtotnolei, com.tsb.ods.sys.api.schema.Error error) {
    this.numtotlei = numtotlei;
    this.numtotnolei = numtotnolei;
    this.error = error;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return numtotlei;
    case 1: return numtotnolei;
    case 2: return error;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: numtotlei = (java.lang.Long)value$; break;
    case 1: numtotnolei = (java.lang.Long)value$; break;
    case 2: error = (com.tsb.ods.sys.api.schema.Error)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'numtotlei' field.
   * @return The value of the 'numtotlei' field.
   */
  public java.lang.Long getNumtotlei() {
    return numtotlei;
  }


  /**
   * Sets the value of the 'numtotlei' field.
   * @param value the value to set.
   */
  public void setNumtotlei(java.lang.Long value) {
    this.numtotlei = value;
  }

  /**
   * Gets the value of the 'numtotnolei' field.
   * @return The value of the 'numtotnolei' field.
   */
  public java.lang.Long getNumtotnolei() {
    return numtotnolei;
  }


  /**
   * Sets the value of the 'numtotnolei' field.
   * @param value the value to set.
   */
  public void setNumtotnolei(java.lang.Long value) {
    this.numtotnolei = value;
  }

  /**
   * Gets the value of the 'error' field.
   * @return The value of the 'error' field.
   */
  public com.tsb.ods.sys.api.schema.Error getError() {
    return error;
  }


  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(com.tsb.ods.sys.api.schema.Error value) {
    this.error = value;
  }

  /**
   * Creates a new TransactionResponseIA7061 RecordBuilder.
   * @return A new TransactionResponseIA7061 RecordBuilder
   */
  public static com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder newBuilder() {
    return new com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder();
  }

  /**
   * Creates a new TransactionResponseIA7061 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TransactionResponseIA7061 RecordBuilder
   */
  public static com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder newBuilder(com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder other) {
    if (other == null) {
      return new com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder();
    } else {
      return new com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder(other);
    }
  }

  /**
   * Creates a new TransactionResponseIA7061 RecordBuilder by copying an existing TransactionResponseIA7061 instance.
   * @param other The existing instance to copy.
   * @return A new TransactionResponseIA7061 RecordBuilder
   */
  public static com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder newBuilder(com.tsb.ods.sys.api.schema.TransactionResponseIA7061 other) {
    if (other == null) {
      return new com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder();
    } else {
      return new com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder(other);
    }
  }

  /**
   * RecordBuilder for TransactionResponseIA7061 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TransactionResponseIA7061>
    implements org.apache.avro.data.RecordBuilder<TransactionResponseIA7061> {

    private java.lang.Long numtotlei;
    private java.lang.Long numtotnolei;
    private com.tsb.ods.sys.api.schema.Error error;
    private com.tsb.ods.sys.api.schema.Error.Builder errorBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.numtotlei)) {
        this.numtotlei = data().deepCopy(fields()[0].schema(), other.numtotlei);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.numtotnolei)) {
        this.numtotnolei = data().deepCopy(fields()[1].schema(), other.numtotnolei);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.error)) {
        this.error = data().deepCopy(fields()[2].schema(), other.error);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasErrorBuilder()) {
        this.errorBuilder = com.tsb.ods.sys.api.schema.Error.newBuilder(other.getErrorBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TransactionResponseIA7061 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tsb.ods.sys.api.schema.TransactionResponseIA7061 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.numtotlei)) {
        this.numtotlei = data().deepCopy(fields()[0].schema(), other.numtotlei);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numtotnolei)) {
        this.numtotnolei = data().deepCopy(fields()[1].schema(), other.numtotnolei);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.error)) {
        this.error = data().deepCopy(fields()[2].schema(), other.error);
        fieldSetFlags()[2] = true;
      }
      this.errorBuilder = null;
    }

    /**
      * Gets the value of the 'numtotlei' field.
      * @return The value.
      */
    public java.lang.Long getNumtotlei() {
      return numtotlei;
    }


    /**
      * Sets the value of the 'numtotlei' field.
      * @param value The value of 'numtotlei'.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder setNumtotlei(java.lang.Long value) {
      validate(fields()[0], value);
      this.numtotlei = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'numtotlei' field has been set.
      * @return True if the 'numtotlei' field has been set, false otherwise.
      */
    public boolean hasNumtotlei() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'numtotlei' field.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder clearNumtotlei() {
      numtotlei = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'numtotnolei' field.
      * @return The value.
      */
    public java.lang.Long getNumtotnolei() {
      return numtotnolei;
    }


    /**
      * Sets the value of the 'numtotnolei' field.
      * @param value The value of 'numtotnolei'.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder setNumtotnolei(java.lang.Long value) {
      validate(fields()[1], value);
      this.numtotnolei = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'numtotnolei' field has been set.
      * @return True if the 'numtotnolei' field has been set, false otherwise.
      */
    public boolean hasNumtotnolei() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'numtotnolei' field.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder clearNumtotnolei() {
      numtotnolei = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'error' field.
      * @return The value.
      */
    public com.tsb.ods.sys.api.schema.Error getError() {
      return error;
    }


    /**
      * Sets the value of the 'error' field.
      * @param value The value of 'error'.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder setError(com.tsb.ods.sys.api.schema.Error value) {
      validate(fields()[2], value);
      this.errorBuilder = null;
      this.error = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'error' field has been set.
      * @return True if the 'error' field has been set, false otherwise.
      */
    public boolean hasError() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'error' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.tsb.ods.sys.api.schema.Error.Builder getErrorBuilder() {
      if (errorBuilder == null) {
        if (hasError()) {
          setErrorBuilder(com.tsb.ods.sys.api.schema.Error.newBuilder(error));
        } else {
          setErrorBuilder(com.tsb.ods.sys.api.schema.Error.newBuilder());
        }
      }
      return errorBuilder;
    }

    /**
     * Sets the Builder instance for the 'error' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder setErrorBuilder(com.tsb.ods.sys.api.schema.Error.Builder value) {
      clearError();
      errorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'error' field has an active Builder instance
     * @return True if the 'error' field has an active Builder instance
     */
    public boolean hasErrorBuilder() {
      return errorBuilder != null;
    }

    /**
      * Clears the value of the 'error' field.
      * @return This builder.
      */
    public com.tsb.ods.sys.api.schema.TransactionResponseIA7061.Builder clearError() {
      error = null;
      errorBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TransactionResponseIA7061 build() {
      try {
        TransactionResponseIA7061 record = new TransactionResponseIA7061();
        record.numtotlei = fieldSetFlags()[0] ? this.numtotlei : (java.lang.Long) defaultValue(fields()[0]);
        record.numtotnolei = fieldSetFlags()[1] ? this.numtotnolei : (java.lang.Long) defaultValue(fields()[1]);
        if (errorBuilder != null) {
          try {
            record.error = this.errorBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("error"));
            throw e;
          }
        } else {
          record.error = fieldSetFlags()[2] ? this.error : (com.tsb.ods.sys.api.schema.Error) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TransactionResponseIA7061>
    WRITER$ = (org.apache.avro.io.DatumWriter<TransactionResponseIA7061>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TransactionResponseIA7061>
    READER$ = (org.apache.avro.io.DatumReader<TransactionResponseIA7061>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.numtotlei == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.numtotlei);
    }

    if (this.numtotnolei == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.numtotnolei);
    }

    this.error.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.numtotlei = null;
      } else {
        this.numtotlei = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.numtotnolei = null;
      } else {
        this.numtotnolei = in.readLong();
      }

      if (this.error == null) {
        this.error = new com.tsb.ods.sys.api.schema.Error();
      }
      this.error.customDecode(in);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.numtotlei = null;
          } else {
            this.numtotlei = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.numtotnolei = null;
          } else {
            this.numtotnolei = in.readLong();
          }
          break;

        case 2:
          if (this.error == null) {
            this.error = new com.tsb.ods.sys.api.schema.Error();
          }
          this.error.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










